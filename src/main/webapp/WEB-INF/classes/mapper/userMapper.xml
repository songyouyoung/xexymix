<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xexymix.app.dao.userMapper">
    <!--/////////////////////////////////////////////////////-->
    <!--////////////////////// 로그인 //////////////////////-->
    <!--/////////////////////////////////////////////////////-->
    <select id="selectLogin" parameterType="userDto" resultType="int">
        select userNo from user
            where userId = #{userId} and userPw = #{userPw}
    </select>

    <!--/////////////////////////////////////////////////////-->
    <!--////////////////////// 회원가입 //////////////////////-->
    <!--/////////////////////////////////////////////////////-->
    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="userDto">
        insert into user (userId, userPw, userName, userPhone, userEmail, userBirth)
            values (#{userId}, #{userPw}, #{userName}, #{userPhone}, #{userEmail}, #{userBirth})
    </insert>

    <!-- 아이디 중복 체크 -->
    <select id="selectIdChk" parameterType="String" resultType="int">
        select count(userId) from user where userId = #{userId}
    </select>
    <!-- 핸드폰번호 중복 체크 -->
    <select id="selectPhoneChk" parameterType="String" resultType="int">
        select count(userId) from user where userPhone = #{userPhone}
    </select>
    <!-- 이메일 중복 체크 -->
    <select id="selectEmailChk" parameterType="String" resultType="int">
        select count(userId) from user where userEmail = #{userEmail}
    </select>

<!--/////////////////////////////////////////////////////-->
<!--/////////////// 아이디 / 비밀번호 찾기 ////////////////-->
<!--/////////////////////////////////////////////////////-->
    <select id="selectFindId" parameterType="userDto" resultType="String">
        select userId from user
            where userName = #{userName}
                and userPhone = #{userPhone}
                and userBirth = #{userBirth}
    </select>
    <select id="selectFindPw" parameterType="userDto" resultType="int">
        select count(userPw) from user
            where userId = #{userId}
                and userName = #{userName}
                and userPhone = #{userPhone}
                and userBirth = #{userBirth}
    </select>

<!--/////////////////////////////////////////////////////-->
<!--//////////////////// 마이 페이지 /////////////////////-->
<!--/////////////////////////////////////////////////////-->
<!--    회원 정보 불러오기-->
    <select id="selectUser" parameterType="int" resultType="userDto">
        select userId, userName, userPhone, userEmail, userBirth, userPo
            from user
                where userNo = #{userNo}
    </select>
<!--    회원 구매 내역 불러오기-->
    <select id="selectUserBuy" parameterType="int" resultType="buyDto">
        SELECT b.buyAuto, b.buyNo, b.buyDate, b.buyOpt, i.itemImg, i.itemName
            FROM buy b
            JOIN item i ON b.itemNo = i.itemNo
                WHERE b.buyNo = (
                        SELECT MAX(buyNo)
                            FROM buy WHERE userNo = #{userNo}
                    );
    </select>
<!--    회원 구매 개수 -->
    <select id="selectUserBuyCnt" parameterType="String" resultType="int">
        SELECT count(DISTINCT buyNo)
            FROM buy
                WHERE userNo = ${userNo} and buyCode = #{buyCode}
    </select>
<!--    회원 취소 개수-->
<!--    회원 문의 내역 불러오기-->
    <select id="selectUserQna" parameterType="int" resultType="qnaDto">
        select q.qnaNo, q.userNo, q.userName, q.qnaTxt, q.qnaRegDate, q.qnaFile, q.qnaFileOri, q.itemNo, i.itemImg, i.itemName
            from qna q, item i
                where q.itemNo = i.itemNo and q.userNo = #{userNo}
        limit 0, 5
    </select>
<!--    회원 리뷰 내역 불러오기-->
    <select id="selectUserRev" parameterType="int" resultType="reviewDto">
        select r.revNo, r.revScore, r.revTxt, r.revRegDate, r.revFile, r.revFileOri, i.itemName
            from review r, item i
                where r.itemNo = i.itemNo and r.userNo = #{userNo}
        limit 0, 3
    </select>
</mapper>